@{
    ViewData["Title"] = "Home Page";
}



@using Microsoft.AspNetCore.Authentication
@using System.Globalization

@model HomeViewModel

<div class="text-center">
    <h1 class="display-4">Welcome Authorization Server</h1>

</div>

@if (User.Identity.IsAuthenticated)
{
    var authenticationResult = await Context.AuthenticateAsync();
    var issued = DateTime.Parse(authenticationResult.Properties.Items[".issued"], CultureInfo.InvariantCulture);
    var expires = DateTime.Parse(authenticationResult.Properties.Items[".expires"], CultureInfo.InvariantCulture);
    <div>
        <p>You are signed in as</p>
        <h2>@User.Identity.Name</h2>
        <hr />
        <dl>
            <dt>Issued</dt>
            <dd>@issued</dd>
            <dt>Expires</dt>
            <dd>@expires</dd>
        </dl>
        <hr />
        @if (Model.Tokens.Count > 0)
        {
            <table width="100%" border="0">
                <tr>
                    <th>Token</th>
                    <th>Create Date</th>
                    <th>Expiration Date</th>
                    <th>Type</th>
                </tr>
                @foreach (var token in Model.Tokens)
                {
                    <tr>
                        <td>@token.Token.Substring(0,15)</td>
                        <td>@token.CreationDate.ToLocalTime()</td>
                        <td>@token.ExpirationDate.ToLocalTime()</td>
                        <td>@token.Type</td>
                    </tr>
                }
            </table>
        }
        <p><a class="btn btn-dark" asp-controller="Account" asp-action="Logout">Logout</a></p>
    </div>
}

@if (!User.Identity.IsAuthenticated)
{
    <div>
        <p>You are not signed in</p>
        <p><a class="btn btn-sm btn-dark" asp-controller="Account" asp-action="Login">Sign in</a></p>
    </div>
}
